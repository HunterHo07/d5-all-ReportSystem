name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: fe/package-lock.json
    
    - name: Install dependencies
      run: cd fe && npm ci
    
    - name: Run linting
      run: cd fe && npm run lint
    
    - name: Run tests
      run: cd fe && npm test
  
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Install Encore
      run: curl -s https://encore.dev/install.sh | bash
    
    - name: Run tests
      run: cd be && encore test ./...
  
  build-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: fe/package-lock.json
    
    - name: Install dependencies
      run: cd fe && npm ci
    
    - name: Build
      run: cd fe && npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: fe/build
  
  build-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Install Encore
      run: curl -s https://encore.dev/install.sh | bash
    
    - name: Build
      run: cd be && encore build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: be/encore.app
  
  deploy:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download frontend build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: fe/build
    
    - name: Download backend build
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: be
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./fe
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/project-report-frontend:latest
    
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./be
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/project-report-backend:latest
    
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /opt/project-report
          docker-compose pull
          docker-compose up -d
          docker system prune -af
