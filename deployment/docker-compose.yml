version: '3'

services:
  # Frontend SvelteKit application
  frontend:
    build:
      context: ../fe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:4000
      - VITE_POCKETBASE_URL=http://pocketbase:8090
    depends_on:
      - backend
      - pocketbase
    restart: unless-stopped
    networks:
      - app-network

  # Backend EncoreGo application
  backend:
    build:
      context: ../be
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - ENCORE_ENV=production
      - POCKETBASE_URL=http://pocketbase:8090
      - POCKETBASE_ADMIN_EMAIL=${POCKETBASE_ADMIN_EMAIL}
      - POCKETBASE_ADMIN_PASSWORD=${POCKETBASE_ADMIN_PASSWORD}
    depends_on:
      - pocketbase
    restart: unless-stopped
    networks:
      - app-network

  # Pocketbase database
  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    ports:
      - "8090:8090"
    volumes:
      - pocketbase-data:/pb_data
      - ../db/schema:/pb_schema
    environment:
      - TZ=UTC
    restart: unless-stopped
    networks:
      - app-network

  # Nginx for routing and load balancing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - pocketbase
    restart: unless-stopped
    networks:
      - app-network

  # Monitoring with Uptime Kuma
  uptime-kuma:
    image: louislam/uptime-kuma:1
    ports:
      - "3001:3001"
    volumes:
      - uptime-kuma-data:/app/data
    restart: unless-stopped
    networks:
      - app-network

  # Analytics with Umami
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "3002:3000"
    environment:
      - DATABASE_URL=postgresql://umami:umami@umami-db:5432/umami
      - DATABASE_TYPE=postgresql
      - HASH_SALT=${UMAMI_HASH_SALT}
    depends_on:
      - umami-db
    restart: unless-stopped
    networks:
      - app-network

  # Umami database
  umami-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=umami
      - POSTGRES_USER=umami
      - POSTGRES_PASSWORD=umami
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  pocketbase-data:
  uptime-kuma-data:
  umami-db-data:

networks:
  app-network:
    driver: bridge
